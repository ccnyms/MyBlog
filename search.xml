<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[学习笔记（一）JavaScript 简介]]></title>
    <url>%2F2020%2F03%2F03%2F%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89%E7%AE%80%E4%BB%8B%2F</url>
    <content type="text"><![CDATA[𝟙.浏览器 Mosaic 是互联网历史上第一个获普遍使用和能够显示图片的网页浏览器。于 1993 年问世。 浏览器组成： shell （外形）部分 内核部分 渲染引擎（语法规则和渲染） js 引擎 其他模块 主流浏览器及其内核： IE -&gt; Trident Chrome -&gt; Blink Opera -&gt; Blink Safari -&gt; Webkit Firefox -&gt; Gecko 2001 年的 IE6 浏览器，首次实现对 JavaScript 引擎的优化和分离。 2008 年 Google 发布最新浏览器 Chrome，它是采用优化后的 JavaScript 引擎，引擎代号 V8，因能把 JavaScript 代码直接转化为机械码来执行，进而以速度快而闻名。 𝟚. JavaScript 简介 程序设计语言分为解释型和编译型两大类。 C 或 C++ 等语言需要一个编译器（compiler）。编译器是一种程序，能够把用 Java 等高级语言编写出来的源代码翻译为直接在计算机上执行的文件。 解释型程序设计语言不需要编译器，它们只需要解释器。对于 JavaScript，浏览器负责完成有关的解释和执行工作。 JavaScript 的特点： 解释型语言 — （不需要编译成文件）跨平台。 单线程 — 同一时间只能干一件事。 ECMA 标注 —为了取得技术优势，微软推出了 JScript，CEnvi 推出 ScriptEase，与 JavaScript 同样可在浏览器上运行。为了统一规格，JavaScript 兼容于 ECMA （欧洲计算机联盟）标准，因此也称为 ECMAScript。 我们把 JavaScript 中的核心部分称为 ECMAScript，加上 BOM（浏览器对象模型）与 DOM（文档对象类型），三者共同组成了 JavaScript。 ECMA-262 标准规定了这门语言的如下组成部分：语法、类型、语句、关键字、保留字、操作符、对象。 浏览器对象模型（BOM，Browser Object Model），提供与浏览器交互的方法和接口。 文档对象内容（DOM，Document Object Model），提供访问和操作网页内容的方法和接口。 异步（asynchronous）：同时执行，类似于有很多条路一起走，可以同时出发。 同步（synchronous）：分次执行，类似于只有一条路走，这个走完了下个才能走。 JavaScript 执行队列 -&gt; 执行过程：轮转时间片。 单线程模拟多线程。 类似吃饭，吃一口米饭，吃一口茄子，再吃一口排骨，再吃一口米饭，再吃一口米饭，再吃一口茄子，顺序完全随机，在足够快的时间内，肉眼可见菜和饭在同时减少。 比如 js 引擎要执行任务 1 和任务 2，js 引擎会把任务 1 和任务 2 切成无数个片段，然后把这些片段随机排成一个队列送入引擎执行，直到被执行完。 JavaScript 可正常计算的范围：小数点前 16 位，后 16 位。 JS 计算精度不准，是纯粹的 bug，所以在 JS 中应尽量避免小数操作。 123var num = 0.14 * 100;console.log(num); // 14.000000000000002 如果需要计算，那么采用Math.floor()（向下取整）或Math.ceil()（向上取整）方法。 123456789// 向上取整，无论小数是多少，都向前进 1var num = Math.ceil(123.234);console.log(num); // 124// 向下取整，无论小数是多少，都不要了var num1 = Math.floor(123.999);console.log(num1); // 123 Math.random()方法可以随机产生一个 0 ～ 1 之间的开区间的数。 12345var num = Math.random();console.log(num); // 0.4322440432127299console.log(num); // 0.5216225452503296 toFixed()方法可以把 Number 四舍五入为指定小数位数的数字。 12345var num = 123.45678;demo = num.toFixed(2);console.log(demo); // 123.46 在 HTML 中引入 JavaScript ： 页面内嵌&lt;script&gt;&lt;/script&gt;标签 外部引入&lt;script src=&quot;location&quot;&gt;&lt;/script&gt; 为符合 Web 标准中结构、样式、行为相分离的原则，通常会采用外部引入。 现代 Web 应用程序一般都把全部 JavaScript 引用放在&lt;body&gt;元素中页面内容的后面，这样在解析包含的 JavaScript 代码之前，页面的内容将完全呈现在浏览器中。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo!This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
